{
    "contents" : "#Auto Arima fit without any x variables\n#This shows you how to do get the accuracy report from a time series forecast rather than a linear model (as we did in class).\nwd <- \"/R/projects/forecast-learn\"\nsetwd(wd)\n\n#file_path <- \"D:/Google Drive/Graduate Studies/VCU/trmFall2015/Forecasting/data/Call Volumes vs Nos Accounts.csv\"\n\nfile_path <- \"./Call Volumes vs Nos Accounts.csv\"\n\nCall.data <- read.csv(file_path)\n\nnrow(Call.data)\n#Call.data$CallVolProd1  \n?ts\n\nCVProd1.ts <- ts(Call.data$CallVolProd1, start = c(2009,45), freq = 52) #end = c(2011, 13), freq = 52)\n\n\nAccts1Week.ts <- ts(Call.data$NosAccts1WeeksOld,  start = c(2009,45), end = c(2011, 12), freq = 52)\n\n\nlibrary(\"forecast\")\ninstall.packages(\"TTR\")\nlibrary(\"TTR\")\n\nn <- length(CVProd1.ts)\n\nplot.ts(CVProd1.ts)\n\nCVProd1.ts.SMA <- SMA( CVProd1.ts, n = 6 )\nplot.ts( CVProd1.ts.SMA )\n\ndecompose( CVProd1.ts)\n\nCall.data$CallVolProd1\n\nna.omit(CVProd1.ts.SMA)\n\n#73 periods\n\n\ncvprod1_ts_components <- decompose(CVProd1.ts)\n\n\n\n(names(Call.data))\n\n\n\n\n\n\nnValid <- 26L\n\n\nnTrain <- n - nValid\n\n\ntrainY.ts <- window(CVProd1.ts, start = c(2009, 45), end = c(2009, 45 + nTrain - 1))\n\n\nvalidY.ts <- window(CVProd1.ts, start = c(2009, 45 + nTrain), end = c(2009, 45 + n - 1))\n\n\nfitwithoutX <- auto.arima(trainY.ts)\n\nForecastwithoutX <- forecast(fitwithoutX, level=c(80,95), h=nValid)\n\naccuracy(ForecastwithoutX$mean, validY.ts)\n\n?auto.arima\n\n\n\n\n\n\n\n'\nSecond, you need to think carefully about the test and validation series for the call volume time series\n(your Y) and the number of account time series (your Xs).\n\nYou are saving the last 26 time periods for validation, but you also need to consider that you are \nforecasting 4 time periods ahead. Here is the code for setting up the training and stepAICstepAICstepAIC?\nvalidation time series for the Y and one X:\n'\n\nlag = 4\n\n\ntrainY.ts <- window(CVProd1.ts, start = c(2009, 45 + lag), end = c(2009, 45 + nTrain - 1))\n\n\nvalidY.ts <- window(CVProd1.ts, start = c(2009, 45 + nTrain), end = c(2009, 45 + n - 1))\n\n\ntrainX.ts <- window(Accts1Week.ts, start = c(2009, 45), end = c(2009, 45 + nTrain - lag - 1))\n\n\nvalidX.ts <- window(Accts1Week.ts, start = c(2009, 45 + nTrain - lag), end = c(2009, 45 + n - lag - 1))\n\n\n",
    "created" : 1443236435476.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1579130105",
    "id" : "F2F08776",
    "lastKnownWriteTime" : 1443236600,
    "path" : "C:/R/projects/forecast-learn/MerrickExample.R",
    "project_path" : "MerrickExample.R",
    "properties" : {
        "notebook_format" : "html_document"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}